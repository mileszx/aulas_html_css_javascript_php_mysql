/*
container é a tag pai
flex-direction = sentido do flex
justify-content = alinhamento dos elementos do container no eixo principal
align-itens = alinha os elementos no eixo perpendicular
flex-wrap = quebra de linha (padrão no wrap)
align-content = alinhar os elementos em mais de uma linha
gap = coloca espaço entre os elementos em todos os lados
gap
row-gap
column-gap

NOS ELEMENTOS FILHO
order = 0 -> padrão Ordena os blocos. Os números podem ser negativos
flew-grow = pode ou não crescer. Cresce em proporção.
flex-shrink = pode ou não encolher.
flex-basis = define largura
flex = agrega grow/shrink/basis
align-self = alinha um único elemento

Jogos para treinar
https://flexboxfroggy.com/#pt-br
https://mastery.games/flexboxzombies/...
https://www.flexboxdefense.com

*/
body{
    background-color:rgb(55, 100, 90) ;
}
:root{
    --tamanho: 30px;
    --altura: 15px;
    --titulo_principal: 40px;
    --titulo_secundario:30px;
    --texto: 20px;
    --text_secundario: 15px;
    --preenchimento: 10px;
    --corUm: #00f853;
    --corDois: #00FF00;
    --corTrês: #b20ed3;
    --corQuatro: #e08011;
    --corCinco: #eeff00;
    --corSeis: #800080;
    --corSete: #FFC0CB;
    --corOito: #ff0062;
    --corNove: #FF00FF;
    --corDez: #240086;
    --corOnze: #ffffff;
    --corDoze: #000000;
    --cortreze: #d47c7c;
    --corQuatorze: #ff0000;
    --corQuinze: #1b816b;

}
.container {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    align-items: center;
    flex-wrap: wrap;
    align-content: center;
    row-gap: 10px;
    column-gap: 30px;
    color: white;

    /* INDIFERENTE */
    background-color: antiquewhite;
    padding: 16px;
    height: 700px;
}

.bloco-1 {
    background-color: var(--corUm);
    padding: 15px;
    width: 50px;
    flex-grow: 0;
    flex-shrink: 1;
    align-self: right;
}

.bloco-2 {
    background-color: var(--corDois);
    padding: 15px;
    width: 50px;
    flex-grow: 0;
    flex-shrink: 1;
}

.bloco-3 {
    background-color: var(--corTrês);
    padding: 15px;
    width: 50px;
    flex-grow: 0;
    flex-shrink: 1;
}

.bloco-4 {
    background-color: var(--corQuatro);
    padding: 15px;
    width: 50px;
    color: #f00;;
}

.bloco-5 {
    background-color: var(--corCinco);
    padding: 15px;
    width: 50px;
}

.bloco-6 {
    background-color: var(--corSeis);
    padding: 15px;
    width: 50px;
}

.bloco-7 {
    background-color: var(--corSete);
    padding: 15px;
    width: 50px;
}

.bloco-8 {
    background-color: var(--corOito);
    padding: 15px;
    width: 50px;
}

.bloco-9 {
    background-color: var(--corNove);
    padding: 15px;
    width: 50px;
}

.bloco-10 {
    background-color: var(--corDez);
    padding: 15px;
    width: 50px;
}

.bloco-11 {
    background-color: var(--corOnze);
    padding: 15px;
    width: 50px;
}

.bloco-12 {
    background-color: var(--corDoze);
    padding: 15px;
    width: 50px;
}

.bloco-13 {
    background-color: var(--corTreze);
    padding: 15px;
    width: 50px;
    color: #000000
}

.bloco-14 {
    background-color: var(--corQuatorze);
    padding: 15px;
    width: 50px;
}

.bloco-15 {
    background-color: var(--corQuinze);
    padding: 15px;
    width: 50px;
}

.bloco-1, .bloco-2, .bloco-3, .bloco-4,
.bloco-5, .bloco-6, .bloco-7, .bloco-8,
.bloco-9, .bloco-10, .bloco-11, .bloco-12,
.bloco-13, .bloco-14, .bloco-15 {
    height: 150px;
    width: 150px;
    text-align: center;
    font-size: 40px;
    font-family: 'Courier New', Courier, monospace;
    border-radius: 16px;
}